<style>
    /* Always set the map height explicitly to define the size of the div
     * element that contains the map. */
    #map {
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>
<style>
    #locationField, #controls {
        position: relative;
        width: 500px;
    }
    #autocomplete {
        position: center;
        top: 0;
        left: 0;
        width: 500px;
    }
    .label {
        text-align: right;
        font-weight: bold;
        width: 100px;
        color: #303030;
    }
    #address {
        border: 1px solid black;
        background-color: white;
        width: 500px;
        padding-right: 10px;
    }
    #address td {
        font-size: 10pt;
    }
    .field {
        width: 99%;
    }
    .slimField {
        width: 100px;
    }
    .wideField {
        width: 230px;
    }
    #locationField {
        height: 0;
        margin-bottom: 0;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="list-group">

                <a class="list-group-item" href="/user/welcome">welcome</a>

                <a class="list-group-item" href="/user/my-account">My Account</a>

                <a class="list-group-item" href="/user/change-password">Change Password</a>

                <a class="list-group-item active" href="/user/create-new-case">Create New Case</a>
            </div>
        </div>

        <div class="col-md-8">
         <div class="row">
                <div class="col-md-10">
                    <div class="form-group">
                        <label>Create New case *</label>
                        <input type="text"  placeholder="Enter Your Case" value="" class="form-control">
                    </div>
                    </div>
        </div>

        <div>
        <label>Address *</label>
        <div id="locationField">
            <input id="autocomplete" placeholder="Enter your address"
                   onFocus="geolocate()" type="text"></input>
        </div>
         </div>

        <table id="address">
            <tr>
                <hr>
                <td class="label">Street address</td>
                <td class="slimField"><input class="field" id="street_number"
                                             disabled="true"></input></td>
                <td class="wideField" colspan="2"><input class="field" id="route"
                                                         disabled="true"></input></td>
            </tr>
            <tr>
                <td class="label">City</td>
                <!-- Note: Selection of address components in this example is typical.
                     You may need to adjust it for the locations relevant to your app. See
                     https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
                -->
                <td class="wideField" colspan="3"><input class="field" id="locality"
                                                         disabled="true"></input></td>
            </tr>
            <tr>
                <td class="label">State</td>
                <td class="slimField"><input class="field"
                                             id="administrative_area_level_1" disabled="true"></input></td>
                <td class="label">Zip code</td>
                <td class="wideField"><input class="field" id="postal_code"
                                             disabled="true"></input></td>
            </tr>
            <tr>
                <td class="label">Country</td>
                <td class="wideField" colspan="3"><input class="field"
                                                         id="country" disabled="true"></input></td>
            </tr>
        </table>
<hr>
            <div class="col-sm-12 text-center">
                <button type="button" class="btn btn-primary btn-lg">Save</button>
            </div>
        </div>
    </div>
</div>

        <script>
            // This example displays an address form, using the autocomplete feature
            // of the Google Places API to help users fill in the information.

            // This example requires the Places library. Include the libraries=places
            // parameter when you first load the API. For example:
            // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

            var placeSearch, autocomplete;
            var componentForm = {
                street_number: 'short_name',
                route: 'long_name',
                locality: 'long_name',
                administrative_area_level_1: 'short_name',
                country: 'long_name',
                postal_code: 'short_name'
            };

            function initAutocomplete() {
                // Create the autocomplete object, restricting the search to geographical
                // location types.
                autocomplete = new google.maps.places.Autocomplete(
                        /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
                        {types: ['geocode']});

                // When the user selects an address from the dropdown, populate the address
                // fields in the form.
                autocomplete.addListener('place_changed', fillInAddress);
            }

            function fillInAddress() {
                // Get the place details from the autocomplete object.
                var place = autocomplete.getPlace();

                for (var component in componentForm) {
                    document.getElementById(component).value = '';
                    document.getElementById(component).disabled = false;
                }

                // Get each component of the address from the place details
                // and fill the corresponding field on the form.
                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (componentForm[addressType]) {
                        var val = place.address_components[i][componentForm[addressType]];
                        document.getElementById(addressType).value = val;
                    }
                }
            }

            // Bias the autocomplete object to the user's geographical location,
            // as supplied by the browser's 'navigator.geolocation' object.
            function geolocate() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        var geolocation = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        var circle = new google.maps.Circle({
                            center: geolocation,
                            radius: position.coords.accuracy
                        });
                        autocomplete.setBounds(circle.getBounds());
                    });
                }
            }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCCgAQQRGCHdlJRH0MQPqnsTl9SJj3aQPE&libraries=places&callback=initAutocomplete"
                async defer></script>
